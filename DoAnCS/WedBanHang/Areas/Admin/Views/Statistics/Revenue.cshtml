@{
    ViewData["Title"] = "Thống kê doanh thu";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<h2 class="fw-bold text-primary mb-4">
    <i class="bi bi-graph-up-arrow me-2"></i>Thống kê doanh thu
</h2>

<div class="card p-4 shadow-sm mb-4">
    <div class="row g-3 align-items-end">
        <div class="col-md-3">
            <label for="type" class="form-label">Thống kê theo</label>
            <select id="type" class="form-select">
                <option value="day">Ngày</option>
                <option value="month">Tháng</option>
                <option value="year">Năm</option>
            </select>
        </div>
        <div class="col-md-3">
            <label for="date" class="form-label">Chọn ngày/tháng/năm</label>
            <input type="date" id="date" class="form-control" />
        </div>
        <div class="col-md-2">
            <button id="viewRevenueBtn" class="btn btn-primary w-100">
                <i class="bi bi-bar-chart-line me-1"></i> Xem doanh thu
            </button>
        </div>
    </div>

    <div class="mt-4">
        <label class="form-label">Lọc theo trạng thái đơn hàng:</label>
        <div id="orderStatusButtons" class="btn-group flex-wrap gap-2" role="group">
            <button type="button" class="btn btn-outline-dark" data-status="All">Tất cả</button>
            <button type="button" class="btn btn-outline-primary" data-status="ChoXacNhan">Chờ xác nhận</button>
            <button type="button" class="btn btn-outline-primary" data-status="DangChuanBi">Chuẩn bị</button>
            <button type="button" class="btn btn-outline-primary" data-status="DangVanChuyen">Vận chuyển</button>
            <button type="button" class="btn btn-outline-primary" data-status="DaGiao">Đã giao</button>
            <button type="button" class="btn btn-outline-primary" data-status="HoanThanh">Hoàn thành</button>
            <button type="button" class="btn btn-outline-primary" data-status="DaHuy">Đã huỷ</button>
        </div>
    </div>
</div>

<div id="revenueResult" class="alert alert-info" style="display: none;">
    Tổng doanh thu: <strong id="revenueAmount"></strong> VNĐ
</div>

<div id="orderStatsSection" style="display: none;">
    <div class="card p-3 mb-4">
        <h5 class="text-success"><i class="bi bi-bar-chart-line me-2"></i>Thống kê đơn hàng theo trạng thái</h5>
        <ul id="orderStatsList" class="list-group mt-2"></ul>
    </div>
</div>

<div id="orderListSection" style="display: none;">
    <div class="table-responsive shadow-sm rounded bg-white p-3 mb-4">
        <h5 class="fw-bold text-primary mb-3">
            <i class="bi bi-card-list me-2"></i>Danh sách đơn hàng
        </h5>
        <table id="orderListTable" class="table table-hover align-middle" style="width: 100%;">
            <thead class="table-light">
                <tr>
                    <th>Mã đơn hàng</th>
                    <th>Ngày đặt</th>
                    <th>Khách hàng</th>
                    <th>Tổng tiền</th>
                    <th>Trạng thái</th>
                </tr>
            </thead>
            <tbody id="orderListBody"></tbody>
        </table>
    </div>
</div>

<div id="productRevenueSection" style="display: none;">
    <div class="table-responsive shadow-sm rounded bg-white p-3 mb-4">
        <h5 class="fw-bold text-success mb-3">
            <i class="bi bi-cash-coin me-2"></i>Chi tiết doanh thu theo sản phẩm
        </h5>
        <table id="productRevenueTable" class="table table-hover align-middle" style="width: 100%;">
            <thead class="table-light">
                <tr>
                    <th>ID sản phẩm</th>
                    <th>Tên sản phẩm</th>
                    <th>Số lượng bán</th>
                    <th>Doanh thu</th>
                </tr>
            </thead>
            <tbody id="productRevenueBody"></tbody>
        </table>
    </div>
</div>
@section Styles {
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/dataTables.bootstrap5.min.css" />

    <style>
        /* Responsive đẹp + padding các bảng */
        .table-responsive.shadow-sm {
            background-color: #fff;
            border-radius: 0.5rem;
            box-shadow: 0 0.25rem 0.75rem rgba(0, 0, 0, 0.05);
        }

        #orderListTable td, #orderListTable th,
        #productRevenueTable td, #productRevenueTable th {
            padding: 1rem 1rem;
            vertical-align: middle;
            border: 1px solid #dee2e6;
        }

        .dataTables_wrapper .dataTables_filter input {
            border-radius: 6px;
            padding: 0.4rem 0.75rem;
            border: 1px solid #ced4da;
        }

        .dataTables_wrapper .dataTables_length select {
            border-radius: 6px;
            border: 1px solid #ced4da;
        }

        .table-hover tbody tr:hover {
            background-color: #f8f9fa;
        }

        .truncate-cell {
            display: inline-block;
            width: 100%;
            overflow: hidden;
            white-space: nowrap;
            text-overflow: ellipsis;
            vertical-align: middle;
        }
    </style>
}

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.6/js/dataTables.bootstrap5.min.js"></script>

    <script>
        function initDataTableOnce(id) {
            if (!$.fn.DataTable.isDataTable(`#${id}`)) {
                $(`#${id}`).DataTable({
                    pagingType: 'full_numbers',
                    order: [[0, 'desc']],
                    language: {
                        url: '//cdn.datatables.net/plug-ins/1.13.6/i18n/vi.json',
                        paginate: {
                            first: '«', previous: '‹', next: '›', last: '»'
                        }
                    }
                });
            }
        }
    </script>
    <script>
        document.getElementById('viewRevenueBtn').addEventListener('click', function () {
            const type = document.getElementById('type').value;
            const date = document.getElementById('date').value;

            if (!date) {
                alert("Vui lòng chọn ngày/tháng/năm cần thống kê.");
                return;
            }

            document.getElementById('orderStatsSection').style.display = 'none';
            document.getElementById('orderListSection').style.display = 'none';

            // Gọi API GetRevenue
            $.ajax({
                url: '@Url.Action("GetRevenue", "Statistics", new { area = "Admin" })',
                type: 'POST',
                data: { type: type, date: date },
                success: function (res) {
                    if (res.success) {
                        document.getElementById('revenueAmount').innerText = res.revenue.toLocaleString();
                        document.getElementById('revenueResult').style.display = 'block';
                    } else {
                        alert("Không thể lấy dữ liệu doanh thu.");
                    }
                },
                error: function () {
                    alert("Lỗi trong quá trình lấy dữ liệu.");
                }
            });

            // Gọi API GetProductRevenue
            $.ajax({
                url: '@Url.Action("GetProductRevenue", "Statistics", new { area = "Admin" })',
                type: 'POST',
                data: { type: type, date: date },
                success: function (res) {
                    const tbody = document.getElementById('productRevenueBody');
                    tbody.innerHTML = '';

                    if (res.success && res.data && res.data.length > 0) {
                        res.data.forEach(item => {
                            const row = `
                                <tr>
                                    <td>${item.productId}</td>
                                    <td>${item.productName}</td>
                                    <td>${item.quantitySold}</td>
                                    <td>${item.totalRevenue.toLocaleString()} VNĐ</td>
                                </tr>
                            `;
                            tbody.innerHTML += row;
                        });
                        document.getElementById('productRevenueSection').style.display = 'block';
                        initDataTableOnce('productRevenueTable');
                    } else {
                        document.getElementById('productRevenueSection').style.display = 'none';
                    }
                },
                error: function () {
                    alert("Lỗi trong quá trình lấy dữ liệu sản phẩm.");
                }
            });
        });

        document.querySelectorAll('#orderStatusButtons button').forEach(btn => {
            btn.addEventListener('click', function () {
                document.getElementById('productRevenueSection').style.display = 'none';
                document.getElementById('revenueResult').style.display = 'none';

                const status = this.getAttribute('data-status');
                const type = document.getElementById('type').value;
                const date = document.getElementById('date').value;

                if (!date) {
                    alert("Vui lòng chọn ngày/tháng/năm.");
                    return;
                }

                if (status === "All") {
                    $.ajax({
                        url: '@Url.Action("GetAllOrdersSummary", "Statistics", new { area = "Admin" })',
                        type: 'POST',
                        data: { type: type, date: date },
                        success: function (res) {
                            if (res.success) {
                                const tbody = document.getElementById('orderListBody');
                                tbody.innerHTML = '';

                                if (res.orders.length > 0) {
                                    res.orders.forEach(order => {
                                        const row = `
                                            <tr>
                                                <td>${order.orderId}</td>
                                                <td>${order.orderDate}</td>
                                                <td>${order.customerName}</td>
                                                <td>${order.totalAmount.toLocaleString()} VNĐ</td>
                                                <td>${order.status}</td>
                                            </tr>
                                        `;
                                        tbody.innerHTML += row;
                                    });
                                    document.getElementById('orderListSection').style.display = 'block';
                                    initDataTableOnce('orderListTable');
                                } else {
                                    document.getElementById('orderListSection').style.display = 'none';
                                }

                                const statsList = document.getElementById('orderStatsList');
                                statsList.innerHTML = '';
                                res.statusSummary.forEach(item => {
                                    const li = `
                                        <li class="list-group-item">${item.statusFriendly}: ${item.count} đơn</li>
                                    `;
                                    statsList.innerHTML += li;
                                });
                                document.getElementById('orderStatsSection').style.display = 'block';
                            } else {
                                alert("Không thể lấy dữ liệu thống kê tổng hợp.");
                            }
                        },
                        error: function () {
                            alert("Lỗi khi gọi thống kê tổng hợp.");
                        }
                    });
                    return;
                }

                // Lọc theo trạng thái cụ thể
                $.ajax({
                    url: '@Url.Action("GetOrderStatsByStatus", "Statistics", new { area = "Admin" })',
                    type: 'POST',
                    data: { type: type, date: date, status: status },
                    success: function (res) {
                        if (res.success) {
                            const statsList = document.getElementById('orderStatsList');
                            statsList.innerHTML = `
                                <li class="list-group-item">${res.statusName}: ${res.count} đơn</li>
                            `;
                            document.getElementById('orderStatsSection').style.display = 'block';

                            const tbody = document.getElementById('orderListBody');
                            tbody.innerHTML = '';

                            if (res.orders.length > 0) {
                                res.orders.forEach(order => {
                                    const row = `
                                        <tr>
                                            <td>${order.orderId}</td>
                                            <td>${order.orderDate}</td>
                                            <td>${order.customerName}</td>
                                            <td>${order.totalAmount.toLocaleString()} VNĐ</td>
                                            <td>${order.status}</td>
                                        </tr>
                                    `;
                                    tbody.innerHTML += row;
                                });
                                document.getElementById('orderListSection').style.display = 'block';
                                initDataTableOnce('orderListTable');
                            } else {
                                document.getElementById('orderListSection').style.display = 'none';
                            }
                        } else {
                            alert("Không thể lấy danh sách đơn hàng.");
                        }
                    },
                    error: function () {
                        alert("Lỗi khi gọi danh sách đơn hàng theo trạng thái.");
                    }
                });
            });
        });
    </script>
}
