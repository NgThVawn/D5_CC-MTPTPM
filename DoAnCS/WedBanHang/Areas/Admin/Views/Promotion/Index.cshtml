@using WebBanHang.Models
@model IEnumerable<WebBanHang.Models.Promotion>

@{
    ViewData["Title"] = "Danh sách khuyến mãi";
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" />
<link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/dataTables.bootstrap5.min.css" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" />

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2 class="fw-bold text-primary">
        <i class="fa-solid fa-tag me-2"></i> @ViewData["Title"]
    </h2>
    <a class="btn btn-primary" asp-action="Add">
        <i class="fa-solid fa-plus me-1"></i> Thêm khuyến mãi mới
    </a>
</div>

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger">@TempData["Error"]</div>
}

<div class="table-responsive shadow-sm bg-white p-3 rounded">
    <table id="promoTable" class="table table-hover align-middle">
        <thead class="table-light">
            <tr>
                <th>Tên</th>
                <th>Loại</th>
                <th>Giá trị</th>
                <th>Bắt đầu</th>
                <th>Kết thúc</th>
                <th>Còn lại</th>
                <th>Trạng thái</th>
                <th>Hành động</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var promo in Model)
            {
                <tr>
                    <td>@promo.Name</td>
                    <td>
                        @switch (promo.DiscountType)
                        {
                            case DiscountType.Percentage:
                                @:Giảm theo %
                                break;
                            case DiscountType.FixedAmount:
                                @:Giảm theo số tiền
                                break;
                            default:
                                @:Không xác định
                                break;
                        }
                    </td>

                    <td>
                        @(promo.DiscountType == DiscountType.Percentage
                                            ? promo.DiscountValue + "%"
                                            : @promo.DiscountValue.ToString("N0") + " đ")
                    </td>
                    <td>@promo.StartDate.ToString("dd/MM/yyyy")</td>
                    <td>@promo.EndDate.ToString("dd/MM/yyyy")</td>

                    <td>
                        @if (promo.IsActive && promo.EndDate > DateTime.Now)
                        {
                            var remaining = promo.EndDate - DateTime.Now;
                            var totalHours = (int)remaining.TotalHours; // lấy tổng số giờ
                            <span class="countdown-timer text-danger fw-bold"
                                  data-end="@promo.EndDate.ToString("yyyy-MM-ddTHH:mm:ss")">
                                @($"{totalHours:D2}:{remaining.Minutes:D2}:{remaining.Seconds:D2}")
                            </span>
                        }
                        else
                        {
                            <span>-</span>
                        }
                    </td>
                    <td>
                        @if (promo.EndDate <= DateTime.Now)
                        {
                            <span class="badge bg-danger">Hết hạn</span>
                        }
                        else if (promo.IsActive)
                        {
                            <span class="badge bg-success">Đang hoạt động</span>
                        }
                        else
                        {
                            <span class="badge bg-secondary">Đã tắt</span>
                        }
                    </td>
                    <td>
                        <div class="btn-group btn-group-sm" role="group">
                            <a class="btn btn-outline-info" asp-action="Display" asp-route-id="@promo.Id" title="Xem chi tiết">
                                <i class="fa-solid fa-eye"></i>
                            </a>
                            <a class="btn btn-outline-primary" asp-action="Edit" asp-route-id="@promo.Id" title="Chỉnh sửa">
                                <i class="fa-solid fa-pen-to-square"></i>
                            </a>
                            <button type="button"
                                    class="btn btn-outline-danger"
                                    data-bs-toggle="modal"
                                    data-bs-target="#confirmDeleteModal"
                                    data-id="@promo.Id"
                                    data-name="@promo.Name"
                                    title="Xoá">
                                <i class="fa-solid fa-trash"></i>
                            </button>

                            @if (promo.EndDate <= DateTime.Now)
                            {
                                <button class="btn btn-outline-secondary" disabled title="Đã hết hạn">
                                    <i class="fa-solid fa-ban"></i>
                                </button>
                            }
                            else
                            {
                                <a class="btn btn-outline-warning"
                                   asp-action="Toggle" asp-route-id="@promo.Id"
                                   title="@(promo.IsActive ? "Tắt khuyến mãi" : "Bật khuyến mãi")">
                                    <i class="fa-solid @(promo.IsActive ? "fa-toggle-off" : "fa-toggle-on")"></i>
                                </a>
                            }
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Modal xác nhận xoá -->
<div class="modal fade" id="confirmDeleteModal" tabindex="-1" aria-labelledby="confirmDeleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form method="post" asp-action="DeleteConfirmed">
                @Html.AntiForgeryToken()
                <div class="modal-header">
                    <h5 class="modal-title" id="confirmDeleteModalLabel">Xác nhận xoá khuyến mãi</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Đóng"></button>
                </div>
                <div class="modal-body">
                    Bạn có chắc muốn xoá khuyến mãi "<strong id="promoName"></strong>"?
                    <input type="hidden" name="id" id="promoId" />
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                    <button type="submit" class="btn btn-danger">Xóa</button>
                </div>
            </form>
        </div>
    </div>
</div>


@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.6/js/dataTables.bootstrap5.min.js"></script>

    <script>
        $('#promoTable').DataTable({
            language: {
                url: '//cdn.datatables.net/plug-ins/1.13.6/i18n/vi.json'
            },
            order: [[3, 'asc']],
            columnDefs: [
                { orderable: false, targets: [7] }
            ]
        });

        const confirmModal = document.getElementById('confirmDeleteModal');
        confirmModal.addEventListener('show.bs.modal', function (event) {
            const button = event.relatedTarget;
            const id = button.getAttribute('data-id');
            const name = button.getAttribute('data-name');

            document.getElementById('promoId').value = id;
            document.getElementById('promoName').textContent = name;
        });

        function updateCountdowns() {
            document.querySelectorAll('.countdown-timer').forEach(span => {
                const endTime = new Date(span.dataset.end);
                const now = new Date();
                const diff = endTime - now;

                if (diff <= 0) {
                    span.innerText = 'Đã hết hạn';
                    return;
                }

                const hours = Math.floor(diff / (1000 * 60 * 60));  // tổng giờ, không % 24
                const minutes = Math.floor((diff / (1000 * 60)) % 60);
                const seconds = Math.floor((diff / 1000) % 60);

                span.innerText = `${hours.toString().padStart(2, '0')}:${minutes
                    .toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;
            });
        }

        setInterval(updateCountdowns, 1000);
        window.onload = updateCountdowns;

    
    </script>
}
