@page
@model RegisterModel
@{
    ViewData["Title"] = "Đăng ký";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container my-5">
    <div class="card shadow-lg mx-auto p-4" style="max-width: 600px; border-radius: 16px;">
        <h3 class="text-center text-primary mb-4"><i class="fas fa-user-plus me-2"></i>Tạo tài khoản mới</h3>

        <form id="registerForm" asp-route-returnUrl="@Model.ReturnUrl" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger small mb-3"></div>

            <div class="row">
                <div class="col-md-8 mb-3">
                    <label asp-for="Input.FullName" class="form-label">Họ tên</label>
                    <input asp-for="Input.FullName" class="form-control" />
                    <span asp-validation-for="Input.FullName" class="text-danger small"></span>
                </div>

                <div class="col-md-4 mb-3">
                    <label asp-for="Input.Age" class="form-label">Tuổi</label>
                    <input asp-for="Input.Age" class="form-control" />
                    <span asp-validation-for="Input.Age" class="text-danger small"></span>
                </div>
            </div>
            <div class="mb-3">
                <label class="form-label">Tỉnh/Thành phố</label>
                <select id="province" class="form-select" required></select>
            </div>
            <div class="mb-3">
                <label class="form-label">Quận/Huyện</label>
                <select id="district" class="form-select" disabled required></select>
            </div>
            <div class="mb-3">
                <label class="form-label">Phường/Xã</label>
                <select id="ward" class="form-select" disabled required></select>
            </div>
            <div class="mb-3">
                <label class="form-label">Địa chỉ cụ thể (số nhà, tên đường...)</label>
                <input type="text" id="specific-address" class="form-control" placeholder="123 Lê Lợi..." required />
            </div>

            <!-- Trường này sẽ lưu địa chỉ hoàn chỉnh vào Input.Address -->
            <input type="hidden" asp-for="Input.Address" id="full-address" name="Input.Address" />
            <span asp-validation-for="Input.Address" class="text-danger small"></span>


            <div class="mb-3">
                <label asp-for="Input.PhoneNumber" class="form-label">Số điện thoại</label>
                <input asp-for="Input.PhoneNumber" class="form-control" />
                <span asp-validation-for="Input.PhoneNumber" class="text-danger small"></span>
            </div>

            <div class="mb-3">
                <label asp-for="Input.Email" class="form-label">Email</label>
                <input asp-for="Input.Email" class="form-control" placeholder="name@example.com" />
                <span asp-validation-for="Input.Email" class="text-danger small"></span>
            </div>

            <div class="mb-3">
                <label asp-for="Input.Password" class="form-label">Mật khẩu</label>
                <input asp-for="Input.Password" class="form-control" />
                <span asp-validation-for="Input.Password" class="text-danger small"></span>
            </div>

            <div class="mb-3">
                <label asp-for="Input.ConfirmPassword" class="form-label">Xác nhận mật khẩu</label>
                <input asp-for="Input.ConfirmPassword" class="form-control" />
                <span asp-validation-for="Input.ConfirmPassword" class="text-danger small"></span>
            </div>

            <button id="registerSubmit" type="submit" class="btn btn-success w-100">Đăng ký</button>
        </form>

        <hr class="my-4" />

        <div class="text-center">
            <p class="mb-2">Đã có tài khoản? <a asp-page="./Login" asp-route-returnUrl="@Model.ReturnUrl">Đăng nhập</a></p>
        </div>

        @if ((Model.ExternalLogins?.Count ?? 0) > 0)
        {
            <div class="text-center mt-3 mb-2">
                <span class="text-muted">Hoặc đăng ký bằng</span>
            </div>
            <form asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post">
                @foreach (var provider in Model.ExternalLogins!)
                {
                    <button type="submit" class="btn btn-outline-dark w-100 mb-2 d-flex align-items-center justify-content-center" name="provider" value="@provider.Name">
                        <img src="/images/gg-icon.png" alt="Google Icon" width="20" class="me-2" />
                        @provider.DisplayName
                    </button>
                }
            </form>
        }
    </div>
</div>

<style>
    .card input.form-control {
        border-radius: 6px;
    }

    .card button {
        border-radius: 8px;
    }

</style>
@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const provinceSelect = document.getElementById("province");
            const districtSelect = document.getElementById("district");
            const wardSelect = document.getElementById("ward");
            const specificInput = document.getElementById("specific-address");
            const fullAddressInput = document.getElementById("full-address");
            const form = document.getElementById("registerForm");

            // ✅ Load danh sách tỉnh/thành
            fetch("https://provinces.open-api.vn/api/?depth=1")
                .then(res => res.json())
                .then(provinces => {
                    provinces.forEach(p => {
                        provinceSelect.add(new Option(p.name, p.code));
                    });
                });

            // ✅ Khi chọn tỉnh → load quận/huyện
            provinceSelect.addEventListener("change", function () {
                fetch(`https://provinces.open-api.vn/api/p/${this.value}?depth=2`)
                    .then(res => res.json())
                    .then(data => {
                        districtSelect.innerHTML = "";
                        wardSelect.innerHTML = "";
                        districtSelect.disabled = false;
                        data.districts.forEach(d => {
                            districtSelect.add(new Option(d.name, d.code));
                        });
                    });
            });

            // ✅ Khi chọn quận → load phường/xã
            districtSelect.addEventListener("change", function () {
                fetch(`https://provinces.open-api.vn/api/d/${this.value}?depth=2`)
                    .then(res => res.json())
                    .then(data => {
                        wardSelect.innerHTML = "";
                        wardSelect.disabled = false;
                        data.wards.forEach(w => {
                            wardSelect.add(new Option(w.name, w.name));
                        });
                    });
            });

            // ✅ Gán địa chỉ vào Input.Address trước khi gửi
            form.addEventListener("submit", function (e) {
                const province = provinceSelect.options[provinceSelect.selectedIndex]?.text || "";
                const district = districtSelect.options[districtSelect.selectedIndex]?.text || "";
                const ward = wardSelect.options[wardSelect.selectedIndex]?.text || "";
                const specific = specificInput.value.trim();

                if (!province || !district || !ward || !specific) {
                    alert("Vui lòng nhập đầy đủ địa chỉ!");
                    e.preventDefault();
                    return;
                }

                const fullAddress = `${specific}, ${ward}, ${district}, ${province}`;
                fullAddressInput.value = fullAddress;

                console.log("✅ Gán địa chỉ:", fullAddress);
            });
        });
    </script>
}

